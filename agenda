#!/usr/bin/env python3
# Console agenda - copyright (c) 2021 Nicolas P. Rougier
# Released under the GNU General Public Licence version 3

if __name__ == "__main__":
    import argparse
    import datetime
    import holidays

    import style
    from agenda import Agenda
    from terminal import Terminal

    parser = argparse.ArgumentParser(description='Console agenda.')
    parser.add_argument("file", type=str, nargs="+", default=[],
                        help='Agenda file (org format)')
    parser.add_argument('--holidays', type=str, default="France",
                        help='Country (fullname or ISO code) to consider for holidays')
    args = parser.parse_args()

    
    day = None
    mouse = None
    agenda = Agenda(args.file,
                    getattr(holidays, args.holidays)(),
                    style.default)

    
    with Terminal() as terminal:
        agenda.terminal = terminal
        agenda.terminal.clear()
        agenda.display_calendar()
        agenda.display_events()

        while True:
            c = agenda.terminal.read()

            # Quit
            if c == "q":
                break

            # Reload agenda
            elif c == "r":
                agenda.populate()
                agenda.terminal.clear()
                agenda.display_calendar()
                agenda.display_events()
                
            elif c == "\033":
                c = agenda.terminal.read(2)
                if c == "[M":
                    # Clear previous selection
                    if mouse and day:
                        month, day, mouse = agenda.get_day(mouse)
                        if day:
                            agenda.terminal.write(agenda.format_day(agenda.year, month, day), mouse, flush=True)

                    # Highlight new selection
                    control = agenda.terminal.read()
                    x = ord(terminal.read()) - 32
                    y = ord(terminal.read()) - 32
                    month, day, mouse = agenda.get_day((x,y))

                    # Display new info (day or week)
                    if day:
                        agenda.terminal.write(agenda.style.highlight + "%2d " % day + agenda.style.none, mouse)
                        agenda.display_events(datetime.date(agenda.year, month, day))
                    else:
                        agenda.display_events()
                        
                    agenda.terminal.flush()

